{
  "id": "manifest",
  "permissions": [],
  "definitions": {},
  "refs": {},
  "types": {
    "ManifestBase": {
      "type": "object",
      "description": "Common properties for all manifest.json files",
      "properties": {
        "manifest_version": {
          "type": "integer",
          "minimum": 2,
          "maximum": 2
        },
        "applications": {
          "type": "object",
          "properties": {
            "gecko": {
              "$ref": "#/types/FirefoxSpecificProperties"
            }
          }
        },
        "browser_specific_settings": {
          "type": "object",
          "properties": {
            "gecko": {
              "$ref": "#/types/FirefoxSpecificProperties"
            },
            "edge": {
              "type": "object",
              "additionalProperties": {}
            }
          }
        },
        "name": {
          "type": "string",
          "preprocess": "localize",
          "maxLength": 45,
          "minLength": 2
        },
        "short_name": {
          "type": "string",
          "preprocess": "localize"
        },
        "description": {
          "type": "string",
          "preprocess": "localize"
        },
        "author": {
          "type": "string",
          "preprocess": "localize",
          "onError": "warn"
        },
        "version": {
          "type": "string",
          "description": "Version string must be a string comprising one to four dot-separated integers (0-65535). E.g: 1.2.3.",
          "format": "versionString"
        },
        "homepage_url": {
          "type": "string",
          "format": "ignore",
          "preprocess": "localize",
          "oneOf": [
            {
              "format": "url"
            },
            {
              "pattern": "^__MSG_.*?__$"
            }
          ]
        }
      },
      "required": [
        "manifest_version",
        "name",
        "version"
      ]
    },
    "WebExtensionManifest": {
      "allOf": [
        {
          "$merge": {
            "source": {
              "$ref": "manifest#/types/ManifestBase"
            },
            "with": {
              "type": "object",
              "description": "Represents a WebExtension manifest.json file",
              "properties": {
                "minimum_chrome_version": {
                  "type": "string"
                },
                "minimum_opera_version": {
                  "type": "string"
                },
                "icons": {
                  "type": "object",
                  "patternProperties": {
                    "^[1-9]\\d*$": {
                      "$ref": "#/types/ExtensionFileUrl"
                    }
                  },
                  "additionalProperties": false
                },
                "incognito": {
                  "type": "string",
                  "enum": [
                    "not_allowed",
                    "spanning"
                  ],
                  "default": "spanning"
                },
                "background": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "$ref": "manifest#/types/ExtensionURL"
                        },
                        "persistent": {
                          "$ref": "#/types/PersistentBackgroundProperty"
                        }
                      },
                      "required": [
                        "page"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "scripts": {
                          "type": "array",
                          "items": {
                            "$ref": "manifest#/types/ExtensionURL"
                          }
                        },
                        "persistent": {
                          "$ref": "#/types/PersistentBackgroundProperty"
                        }
                      },
                      "required": [
                        "scripts"
                      ]
                    }
                  ]
                },
                "options_ui": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "$ref": "manifest#/types/ExtensionURL"
                    },
                    "browser_style": {
                      "type": "boolean",
                      "default": true
                    },
                    "chrome_style": {
                      "type": "boolean"
                    },
                    "open_in_tab": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": {
                    "deprecated": "An unexpected property was found in the WebExtension manifest"
                  },
                  "required": [
                    "page"
                  ]
                },
                "content_scripts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/types/ContentScript"
                  }
                },
                "content_security_policy": {
                  "onError": "warn",
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "contentSecurityPolicy"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "extension_pages": {
                          "type": "string",
                          "format": "contentSecurityPolicy",
                          "description": "The Content Security Policy used for extension pages."
                        },
                        "content_scripts": {
                          "type": "string",
                          "format": "contentSecurityPolicy",
                          "description": "The Content Security Policy used for content scripts."
                        },
                        "isolated_world": {
                          "type": "string",
                          "format": "contentSecurityPolicy",
                          "description": "An alias for content_scripts to support Chrome compatibility.  Content Security Policy implementations may differ between Firefox and Chrome.  If both isolated_world and content_scripts exist, the value from content_scripts will be used."
                        }
                      }
                    }
                  ]
                },
                "permissions": {
                  "type": "array",
                  "default": [],
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/types/PermissionOrOrigin"
                      },
                      {
                        "onError": "warn"
                      }
                    ],
                    "anyOf": [
                      {},
                      {
                        "format": "deprecated"
                      }
                    ]
                  },
                  "uniqueItems": true
                },
                "optional_permissions": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/types/OptionalPermissionOrOrigin"
                      },
                      {
                        "onError": "warn"
                      }
                    ]
                  },
                  "default": []
                },
                "web_accessible_resources": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "developer": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "preprocess": "localize"
                    },
                    "url": {
                      "type": "string",
                      "preprocess": "localize"
                    }
                  }
                },
                "hidden": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        },
        {
          "$ref": "browserAction#/definitions/WebExtensionManifest"
        },
        {
          "$ref": "chrome_settings_overrides#/definitions/WebExtensionManifest"
        },
        {
          "$ref": "commands#/definitions/WebExtensionManifest"
        },
        {
          "$ref": "devtools#/definitions/WebExtensionManifest"
        },
        {
          "$ref": "experiments#/definitions/WebExtensionManifest"
        },
        {
          "$ref": "extension_protocol_handlers#/definitions/WebExtensionManifest"
        },
        {
          "$ref": "i18n#/definitions/WebExtensionManifest"
        },
        {
          "$ref": "omnibox#/definitions/WebExtensionManifest"
        },
        {
          "$ref": "pageAction#/definitions/WebExtensionManifest"
        },
        {
          "$ref": "sidebarAction#/definitions/WebExtensionManifest"
        },
        {
          "$ref": "telemetry#/definitions/WebExtensionManifest"
        },
        {
          "$ref": "theme#/definitions/WebExtensionManifest"
        },
        {
          "$ref": "url_overrides#/definitions/WebExtensionManifest"
        },
        {
          "$ref": "userScripts#/definitions/WebExtensionManifest"
        }
      ]
    },
    "WebExtensionLangpackManifest": {
      "$merge": {
        "source": {
          "$ref": "manifest#/types/ManifestBase"
        },
        "with": {
          "type": "object",
          "description": "Represents a WebExtension language pack manifest.json file",
          "properties": {
            "homepage_url": {
              "type": "string",
              "format": "url",
              "preprocess": "localize"
            },
            "langpack_id": {
              "type": "string",
              "pattern": "^[a-zA-Z][a-zA-Z-]+$"
            },
            "languages": {
              "type": "object",
              "patternProperties": {
                "^[a-z]{2}[a-zA-Z-]*$": {
                  "type": "object",
                  "properties": {
                    "chrome_resources": {
                      "type": "object",
                      "patternProperties": {
                        "^[a-zA-Z-.]+$": {
                          "anyOf": [
                            {
                              "$ref": "manifest#/types/ExtensionURL"
                            },
                            {
                              "type": "object",
                              "patternProperties": {
                                "^[a-z]+$": {
                                  "$ref": "manifest#/types/ExtensionURL"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    "version": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "chrome_resources",
                    "version"
                  ]
                }
              }
            },
            "sources": {
              "type": "object",
              "patternProperties": {
                "^[a-z]+$": {
                  "type": "object",
                  "properties": {
                    "base_path": {
                      "$ref": "manifest#/types/ExtensionURL"
                    },
                    "paths": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "strictRelativeUrl"
                      }
                    }
                  },
                  "required": [
                    "base_path"
                  ]
                }
              }
            }
          },
          "required": [
            "langpack_id",
            "languages"
          ]
        }
      }
    },
    "WebExtensionDictionaryManifest": {
      "$merge": {
        "source": {
          "$ref": "manifest#/types/ManifestBase"
        },
        "with": {
          "type": "object",
          "description": "Represents a WebExtension dictionary manifest.json file",
          "properties": {
            "homepage_url": {
              "type": "string",
              "format": "url",
              "preprocess": "localize"
            },
            "dictionaries": {
              "type": "object",
              "patternProperties": {
                "^[a-z]{2}[a-zA-Z-]*$": {
                  "type": "string",
                  "format": "strictRelativeUrl",
                  "pattern": "\\.dic$"
                }
              }
            }
          },
          "required": [
            "dictionaries"
          ]
        }
      }
    },
    "ThemeIcons": {
      "type": "object",
      "properties": {
        "light": {
          "allOf": [
            {
              "$ref": "manifest#/types/ExtensionURL"
            },
            {
              "description": "A light icon to use for dark themes"
            }
          ]
        },
        "dark": {
          "allOf": [
            {
              "$ref": "manifest#/types/ExtensionURL"
            },
            {
              "description": "The dark icon to use for light themes"
            }
          ]
        },
        "size": {
          "type": "integer",
          "description": "The size of the icons"
        }
      },
      "required": [
        "light",
        "dark",
        "size"
      ]
    },
    "OptionalPermissionNoPrompt": {
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "idle"
          ]
        },
        {
          "$ref": "cookies#/definitions/OptionalPermissionNoPrompt"
        },
        {
          "$ref": "menus#/definitions/OptionalPermissionNoPrompt"
        },
        {
          "$ref": "search#/definitions/OptionalPermissionNoPrompt"
        },
        {
          "$ref": "tabs#/definitions/OptionalPermissionNoPrompt"
        },
        {
          "$ref": "webRequest#/definitions/OptionalPermissionNoPrompt"
        }
      ]
    },
    "OptionalPermission": {
      "anyOf": [
        {
          "$ref": "#/types/OptionalPermissionNoPrompt"
        },
        {
          "type": "string",
          "enum": [
            "clipboardRead",
            "clipboardWrite",
            "geolocation",
            "notifications"
          ]
        },
        {
          "$ref": "bookmarks#/definitions/OptionalPermission"
        },
        {
          "$ref": "browserSettings#/definitions/OptionalPermission"
        },
        {
          "$ref": "browsingData#/definitions/OptionalPermission"
        },
        {
          "$ref": "devtools#/definitions/OptionalPermission"
        },
        {
          "$ref": "downloads#/definitions/OptionalPermission"
        },
        {
          "$ref": "find#/definitions/OptionalPermission"
        },
        {
          "$ref": "history#/definitions/OptionalPermission"
        },
        {
          "$ref": "management#/definitions/OptionalPermission"
        },
        {
          "$ref": "pkcs11#/definitions/OptionalPermission"
        },
        {
          "$ref": "privacy#/definitions/OptionalPermission"
        },
        {
          "$ref": "proxy#/definitions/OptionalPermission"
        },
        {
          "$ref": "sessions#/definitions/OptionalPermission"
        },
        {
          "$ref": "tabs#/definitions/OptionalPermission"
        },
        {
          "$ref": "topSites#/definitions/OptionalPermission"
        },
        {
          "$ref": "webNavigation#/definitions/OptionalPermission"
        }
      ]
    },
    "OptionalPermissionOrOrigin": {
      "anyOf": [
        {
          "$ref": "#/types/OptionalPermission"
        },
        {
          "$ref": "#/types/MatchPattern"
        }
      ]
    },
    "PermissionNoPrompt": {
      "anyOf": [
        {
          "$ref": "#/types/OptionalPermission"
        },
        {
          "type": "string",
          "enum": [
            "alarms",
            "mozillaAddons",
            "storage",
            "unlimitedStorage"
          ]
        },
        {
          "$ref": "activityLog#/definitions/PermissionNoPrompt"
        },
        {
          "$ref": "captivePortal#/definitions/PermissionNoPrompt"
        },
        {
          "$ref": "contextualIdentities#/definitions/PermissionNoPrompt"
        },
        {
          "$ref": "dns#/definitions/PermissionNoPrompt"
        },
        {
          "$ref": "geckoProfiler#/definitions/PermissionNoPrompt"
        },
        {
          "$ref": "identity#/definitions/PermissionNoPrompt"
        },
        {
          "$ref": "menus#/definitions/PermissionNoPrompt"
        },
        {
          "$ref": "networkStatus#/definitions/PermissionNoPrompt"
        },
        {
          "$ref": "normandyAddonStudy#/definitions/PermissionNoPrompt"
        },
        {
          "$ref": "telemetry#/definitions/PermissionNoPrompt"
        },
        {
          "$ref": "theme#/definitions/PermissionNoPrompt"
        },
        {
          "$ref": "urlbar#/definitions/PermissionNoPrompt"
        }
      ]
    },
    "Permission": {
      "anyOf": [
        {
          "$ref": "#/types/PermissionNoPrompt"
        },
        {
          "$ref": "#/types/OptionalPermission"
        },
        {
          "$ref": "experiments#/definitions/Permission"
        },
        {
          "$ref": "runtime#/definitions/Permission"
        }
      ]
    },
    "PermissionOrOrigin": {
      "anyOf": [
        {
          "$ref": "#/types/Permission"
        },
        {
          "$ref": "#/types/MatchPattern"
        }
      ]
    },
    "HttpURL": {
      "type": "string",
      "format": "url",
      "pattern": "^https?://.*$"
    },
    "ExtensionURL": {
      "type": "string",
      "format": "strictRelativeUrl"
    },
    "ExtensionFileUrl": {
      "type": "string",
      "format": "strictRelativeUrl",
      "pattern": "\\S",
      "preprocess": "localize"
    },
    "ImageDataOrExtensionURL": {
      "type": "string",
      "format": "imageDataOrStrictRelativeUrl"
    },
    "ExtensionID": {
      "anyOf": [
        {
          "type": "string",
          "pattern": "^\\{[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\\}$"
        },
        {
          "type": "string",
          "pattern": "^[a-zA-Z0-9-._]*@[a-zA-Z0-9-._]+$"
        }
      ],
      "maxLength": 255
    },
    "FirefoxSpecificProperties": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/types/ExtensionID"
        },
        "update_url": {
          "type": "string",
          "format": "secureUrl"
        },
        "strict_min_version": {
          "type": "string",
          "default": "42a1",
          "description": "Minimum version of Gecko to support. Defaults to '42a1'. (Requires Gecko 45)",
          "pattern": "^[0-9]{1,3}(\\.[a-z0-9]+)+$"
        },
        "strict_max_version": {
          "type": "string",
          "default": "*",
          "description": "Maximum version of Gecko to support. Defaults to '*'. (Requires Gecko 45)",
          "pattern": "^[0-9]{1,3}(\\.[a-z0-9*]+)+$"
        }
      }
    },
    "MatchPattern": {
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "<all_urls>"
          ]
        },
        {
          "$ref": "#/types/MatchPatternRestricted"
        },
        {
          "$ref": "#/types/MatchPatternUnestricted"
        }
      ]
    },
    "MatchPatternRestricted": {
      "description": "Same as MatchPattern above, but excludes <all_urls>",
      "anyOf": [
        {
          "type": "string",
          "pattern": "^(https?|wss?|file|ftp|\\*)://(\\*|\\*\\.[^*/]+|[^*/]+)/.*$"
        },
        {
          "type": "string",
          "pattern": "^file:///.*$"
        }
      ]
    },
    "MatchPatternUnestricted": {
      "description": "Mostly unrestricted match patterns for privileged add-ons. This should technically be rejected for unprivileged add-ons, but, reasons. The MatchPattern class will still refuse privileged schemes for those extensions.",
      "anyOf": [
        {
          "type": "string",
          "pattern": "^resource://(\\*|\\*\\.[^*/]+|[^*/]+)/.*$|^about:"
        }
      ]
    },
    "ContentScript": {
      "type": "object",
      "description": "Details of the script or CSS to inject. Either the code or the file property must be set, but both may not be set at the same time. Based on InjectDetails, but using underscore rather than camel case naming conventions.",
      "properties": {
        "matches": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/types/MatchPattern"
          }
        },
        "exclude_matches": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/types/MatchPattern"
          }
        },
        "include_globs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exclude_globs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "css": {
          "type": "array",
          "description": "The list of CSS files to inject",
          "items": {
            "$ref": "manifest#/types/ExtensionURL"
          }
        },
        "js": {
          "type": "array",
          "description": "The list of JS files to inject",
          "items": {
            "$ref": "manifest#/types/ExtensionURL"
          }
        },
        "all_frames": {
          "type": "boolean",
          "description": "If allFrames is <code>true</code>, implies that the JavaScript or CSS should be injected into all frames of current page. By default, it's <code>false</code> and is only injected into the top frame."
        },
        "match_about_blank": {
          "type": "boolean",
          "description": "If matchAboutBlank is true, then the code is also injected in about:blank and about:srcdoc frames if your extension has access to its parent document. Code cannot be inserted in top-level about:-frames. By default it is <code>false</code>."
        },
        "run_at": {
          "allOf": [
            {
              "$ref": "extensionTypes#/types/RunAt"
            },
            {
              "default": "document_idle",
              "description": "The soonest that the JavaScript or CSS will be injected into the tab. Defaults to \"document_idle\"."
            }
          ]
        }
      },
      "required": [
        "matches"
      ]
    },
    "IconPath": {
      "anyOf": [
        {
          "type": "object",
          "patternProperties": {
            "^[1-9]\\d*$": {
              "$ref": "#/types/ExtensionFileUrl"
            }
          },
          "additionalProperties": false
        },
        {
          "$ref": "#/types/ExtensionFileUrl"
        }
      ]
    },
    "IconImageData": {
      "anyOf": [
        {
          "type": "object",
          "patternProperties": {
            "^[1-9]\\d*$": {
              "$ref": "#/types/ImageData"
            }
          },
          "additionalProperties": false
        },
        {
          "$ref": "#/types/ImageData"
        }
      ]
    },
    "ImageData": {
      "type": "object",
      "isInstanceOf": "ImageData",
      "postprocess": "convertImageDataToURL"
    },
    "UnrecognizedProperty": {
      "deprecated": "An unexpected property was found in the WebExtension manifest."
    },
    "PersistentBackgroundProperty": {
      "anyOf": [
        {
          "type": "boolean",
          "enum": [
            true
          ]
        },
        {
          "type": "boolean",
          "enum": [
            false
          ],
          "deprecated": "Event pages are not currently supported. This will run as a persistent background page."
        }
      ]
    }
  }
}
