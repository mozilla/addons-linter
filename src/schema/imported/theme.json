{
  "id": "theme",
  "description": "The theme API allows customizing of visual elements of the browser.",
  "events": [
    {
      "name": "onUpdated",
      "type": "function",
      "description": "Fired when a new theme has been applied",
      "parameters": [
        {
          "allOf": [
            {
              "$ref": "#/types/ThemeUpdateInfo"
            },
            {
              "name": "updateInfo",
              "description": "Details of the theme update"
            }
          ]
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "getCurrent",
      "type": "function",
      "async": true,
      "description": "Returns the current theme for the specified window or the last focused window.",
      "parameters": [
        {
          "type": "integer",
          "name": "windowId",
          "optional": true,
          "description": "The window for which we want the theme."
        }
      ]
    },
    {
      "name": "update",
      "type": "function",
      "async": true,
      "description": "Make complete updates to the theme. Resolves when the update has completed.",
      "permissions": [
        "theme"
      ],
      "parameters": [
        {
          "type": "integer",
          "name": "windowId",
          "optional": true,
          "description": "The id of the window to update. No id updates all windows."
        },
        {
          "allOf": [
            {
              "$ref": "manifest#/types/ThemeType"
            },
            {
              "name": "details",
              "description": "The properties of the theme to update."
            }
          ]
        }
      ]
    },
    {
      "name": "reset",
      "type": "function",
      "async": true,
      "description": "Removes the updates made to the theme.",
      "permissions": [
        "theme"
      ],
      "parameters": [
        {
          "type": "integer",
          "name": "windowId",
          "optional": true,
          "description": "The id of the window to reset. No id resets all windows."
        }
      ]
    }
  ],
  "definitions": {
    "PermissionNoPrompt": {
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "theme"
          ]
        }
      ]
    },
    "WebExtensionManifest": {
      "properties": {
        "theme_experiment": {
          "$ref": "#/types/ThemeExperiment"
        }
      }
    }
  },
  "refs": {
    "theme#/definitions/PermissionNoPrompt": {
      "namespace": "manifest",
      "type": "PermissionNoPrompt"
    },
    "theme#/definitions/WebExtensionManifest": {
      "namespace": "manifest",
      "type": "WebExtensionManifest"
    }
  },
  "types": {
    "ThemeUpdateInfo": {
      "type": "object",
      "description": "Info provided in the onUpdated listener.",
      "properties": {
        "theme": {
          "type": "object",
          "description": "The new theme after update"
        },
        "windowId": {
          "type": "integer",
          "description": "The id of the window the theme has been applied to"
        }
      },
      "required": [
        "theme"
      ]
    },
    "ThemeColor": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "minItems": 3,
          "maxItems": 3,
          "items": {
            "type": "integer",
            "minimum": 0,
            "maximum": 255
          }
        },
        {
          "type": "array",
          "minItems": 4,
          "maxItems": 4,
          "items": {
            "type": "number"
          }
        }
      ]
    },
    "ThemeExperiment": {
      "type": "object",
      "properties": {
        "stylesheet": {
          "$ref": "manifest#/types/ExtensionURL"
        },
        "images": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "colors": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ThemeType": {
      "type": "object",
      "properties": {
        "images": {
          "type": "object",
          "properties": {
            "additional_backgrounds": {
              "type": "array",
              "items": {
                "$ref": "manifest#/types/ImageDataOrExtensionURL"
              },
              "maxItems": 15
            },
            "headerURL": {
              "allOf": [
                {
                  "$ref": "manifest#/types/ImageDataOrExtensionURL"
                },
                {
                  "deprecated": "Unsupported images property, use 'theme.images.theme_frame', this alias is ignored in Firefox >= 70."
                }
              ]
            },
            "theme_frame": {
              "$ref": "manifest#/types/ImageDataOrExtensionURL"
            }
          },
          "additionalProperties": {
            "$ref": "manifest#/types/ImageDataOrExtensionURL"
          }
        },
        "colors": {
          "type": "object",
          "properties": {
            "tab_selected": {
              "$ref": "#/types/ThemeColor"
            },
            "accentcolor": {
              "allOf": [
                {
                  "$ref": "#/types/ThemeColor"
                },
                {
                  "deprecated": "Unsupported colors property, use 'theme.colors.frame', this alias is ignored in Firefox >= 70."
                }
              ]
            },
            "frame": {
              "$ref": "#/types/ThemeColor"
            },
            "frame_inactive": {
              "$ref": "#/types/ThemeColor"
            },
            "textcolor": {
              "allOf": [
                {
                  "$ref": "#/types/ThemeColor"
                },
                {
                  "deprecated": "Unsupported color property, use 'theme.colors.tab_background_text', this alias is ignored in Firefox >= 70."
                }
              ]
            },
            "tab_background_text": {
              "$ref": "#/types/ThemeColor"
            },
            "tab_background_separator": {
              "$ref": "#/types/ThemeColor"
            },
            "tab_loading": {
              "$ref": "#/types/ThemeColor"
            },
            "tab_text": {
              "$ref": "#/types/ThemeColor"
            },
            "tab_line": {
              "$ref": "#/types/ThemeColor"
            },
            "toolbar": {
              "$ref": "#/types/ThemeColor"
            },
            "toolbar_text": {
              "allOf": [
                {
                  "$ref": "#/types/ThemeColor"
                },
                {
                  "description": "This color property is an alias of 'bookmark_text'."
                }
              ]
            },
            "bookmark_text": {
              "$ref": "#/types/ThemeColor"
            },
            "toolbar_field": {
              "$ref": "#/types/ThemeColor"
            },
            "toolbar_field_text": {
              "$ref": "#/types/ThemeColor"
            },
            "toolbar_field_border": {
              "$ref": "#/types/ThemeColor"
            },
            "toolbar_field_separator": {
              "$ref": "#/types/ThemeColor"
            },
            "toolbar_top_separator": {
              "$ref": "#/types/ThemeColor"
            },
            "toolbar_bottom_separator": {
              "$ref": "#/types/ThemeColor"
            },
            "toolbar_vertical_separator": {
              "$ref": "#/types/ThemeColor"
            },
            "icons": {
              "$ref": "#/types/ThemeColor"
            },
            "icons_attention": {
              "$ref": "#/types/ThemeColor"
            },
            "button_background_hover": {
              "$ref": "#/types/ThemeColor"
            },
            "button_background_active": {
              "$ref": "#/types/ThemeColor"
            },
            "popup": {
              "$ref": "#/types/ThemeColor"
            },
            "popup_text": {
              "$ref": "#/types/ThemeColor"
            },
            "popup_border": {
              "$ref": "#/types/ThemeColor"
            },
            "toolbar_field_focus": {
              "$ref": "#/types/ThemeColor"
            },
            "toolbar_field_text_focus": {
              "$ref": "#/types/ThemeColor"
            },
            "toolbar_field_border_focus": {
              "$ref": "#/types/ThemeColor"
            },
            "popup_highlight": {
              "$ref": "#/types/ThemeColor"
            },
            "popup_highlight_text": {
              "$ref": "#/types/ThemeColor"
            },
            "ntp_background": {
              "$ref": "#/types/ThemeColor"
            },
            "ntp_text": {
              "$ref": "#/types/ThemeColor"
            },
            "sidebar": {
              "$ref": "#/types/ThemeColor"
            },
            "sidebar_border": {
              "$ref": "#/types/ThemeColor"
            },
            "sidebar_text": {
              "$ref": "#/types/ThemeColor"
            },
            "sidebar_highlight": {
              "$ref": "#/types/ThemeColor"
            },
            "sidebar_highlight_text": {
              "$ref": "#/types/ThemeColor"
            },
            "toolbar_field_highlight": {
              "$ref": "#/types/ThemeColor"
            },
            "toolbar_field_highlight_text": {
              "$ref": "#/types/ThemeColor"
            }
          },
          "additionalProperties": {
            "$ref": "#/types/ThemeColor"
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "additional_backgrounds_alignment": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bottom",
                  "center",
                  "left",
                  "right",
                  "top",
                  "center bottom",
                  "center center",
                  "center top",
                  "left bottom",
                  "left center",
                  "left top",
                  "right bottom",
                  "right center",
                  "right top"
                ]
              },
              "maxItems": 15
            },
            "additional_backgrounds_tiling": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "no-repeat",
                  "repeat",
                  "repeat-x",
                  "repeat-y"
                ]
              },
              "maxItems": 15
            }
          },
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ThemeManifest": {
      "$merge": {
        "source": {
          "$ref": "manifest#/types/ManifestBase"
        },
        "with": {
          "type": "object",
          "description": "Contents of manifest.json for a static theme",
          "properties": {
            "theme": {
              "$ref": "#/types/ThemeType"
            },
            "dark_theme": {
              "$ref": "#/types/ThemeType"
            },
            "default_locale": {
              "type": "string"
            },
            "theme_experiment": {
              "$ref": "#/types/ThemeExperiment"
            },
            "icons": {
              "type": "object",
              "patternProperties": {
                "^[1-9]\\d*$": {
                  "type": "string"
                }
              }
            }
          },
          "required": [
            "theme"
          ]
        }
      }
    }
  }
}
