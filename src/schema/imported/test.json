{
  "id": "test",
  "allowedContexts": [
    "content",
    "devtools"
  ],
  "defaultContexts": [
    "content",
    "devtools"
  ],
  "description": "none",
  "functions": [
    {
      "name": "notifyFail",
      "type": "function",
      "description": "Notifies the browser process that test code running in the extension failed.  This is only used for internal unit testing.",
      "parameters": [
        {
          "type": "string",
          "name": "message"
        }
      ]
    },
    {
      "name": "notifyPass",
      "type": "function",
      "description": "Notifies the browser process that test code running in the extension passed.  This is only used for internal unit testing.",
      "parameters": [
        {
          "type": "string",
          "name": "message",
          "optional": true
        }
      ]
    },
    {
      "name": "log",
      "type": "function",
      "description": "Logs a message during internal unit testing.",
      "parameters": [
        {
          "type": "string",
          "name": "message"
        }
      ]
    },
    {
      "name": "sendMessage",
      "type": "function",
      "description": "Sends a string message to the browser process, generating a Notification that C++ test code can wait for.",
      "allowAmbiguousOptionalArguments": true,
      "parameters": [
        {
          "name": "arg1",
          "optional": true
        },
        {
          "name": "arg2",
          "optional": true
        }
      ]
    },
    {
      "name": "fail",
      "type": "function",
      "parameters": [
        {
          "name": "message",
          "optional": true
        }
      ]
    },
    {
      "name": "succeed",
      "type": "function",
      "parameters": [
        {
          "name": "message",
          "optional": true
        }
      ]
    },
    {
      "name": "assertTrue",
      "type": "function",
      "allowAmbiguousOptionalArguments": true,
      "parameters": [
        {
          "name": "test",
          "optional": true
        },
        {
          "type": "string",
          "name": "message",
          "optional": true
        }
      ]
    },
    {
      "name": "assertFalse",
      "type": "function",
      "allowAmbiguousOptionalArguments": true,
      "parameters": [
        {
          "name": "test",
          "optional": true
        },
        {
          "type": "string",
          "name": "message",
          "optional": true
        }
      ]
    },
    {
      "name": "assertBool",
      "type": "function",
      "unsupported": true,
      "parameters": [
        {
          "name": "test",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ]
        },
        {
          "type": "boolean",
          "name": "expected"
        },
        {
          "type": "string",
          "name": "message",
          "optional": true
        }
      ]
    },
    {
      "name": "checkDeepEq",
      "type": "function",
      "unsupported": true,
      "allowAmbiguousOptionalArguments": true,
      "parameters": [
        {
          "name": "expected"
        },
        {
          "name": "actual"
        }
      ]
    },
    {
      "name": "assertEq",
      "type": "function",
      "allowAmbiguousOptionalArguments": true,
      "parameters": [
        {
          "name": "expected",
          "optional": true
        },
        {
          "name": "actual",
          "optional": true
        },
        {
          "type": "string",
          "name": "message",
          "optional": true
        }
      ]
    },
    {
      "name": "assertNoLastError",
      "type": "function",
      "unsupported": true,
      "parameters": []
    },
    {
      "name": "assertLastError",
      "type": "function",
      "unsupported": true,
      "parameters": [
        {
          "type": "string",
          "name": "expectedError"
        }
      ]
    },
    {
      "name": "assertRejects",
      "type": "function",
      "async": true,
      "parameters": [
        {
          "name": "promise",
          "$ref": "#/types/Promise"
        },
        {
          "name": "expectedError",
          "$ref": "#/types/ExpectedError",
          "optional": true
        },
        {
          "name": "message",
          "type": "string",
          "optional": true
        }
      ]
    },
    {
      "name": "assertThrows",
      "type": "function",
      "parameters": [
        {
          "name": "func",
          "type": "function"
        },
        {
          "name": "expectedError",
          "$ref": "#/types/ExpectedError",
          "optional": true
        },
        {
          "name": "message",
          "type": "string",
          "optional": true
        }
      ]
    }
  ],
  "events": [
    {
      "name": "onMessage",
      "type": "function",
      "description": "Used to test sending messages to extensions.",
      "parameters": [
        {
          "type": "string",
          "name": "message"
        },
        {
          "name": "argument"
        }
      ]
    }
  ],
  "definitions": {},
  "refs": {},
  "types": {
    "ExpectedError": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "isInstanceOf": "RegExp",
          "additionalProperties": true
        },
        {
          "type": "function"
        }
      ]
    },
    "Promise": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "then": {
              "type": "function"
            }
          },
          "additionalProperties": true,
          "required": [
            "then"
          ]
        },
        {
          "type": "object",
          "isInstanceOf": "Promise",
          "additionalProperties": true
        }
      ]
    }
  }
}