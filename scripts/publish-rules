#!/usr/bin/env node
// eslint-disable-next-line import/no-extraneous-dependencies
const ghpages = require('gh-pages');

// Get a formatted commit message to review changes from the commit log
// github will turn some of these into clickable links
function getDeployMessage() {
  let ret = '\n\n';
  if (process.env.CIRCLECI !== 'true') {
    ret += 'missing env vars for circle-ci';
    return ret;
  }
  ret += `Branch:       ${process.env.CIRCLE_BRANCH}\n`;
  ret += `SHA:          ${process.env.CIRCLE_SHA1}\n`;
  ret += `Compare URL:  ${process.env.CIRCLE_COMPARE_URL}\n`;
  ret += `Build URL:    ${process.env.CIRCLE_BUILD_URL}\n`;
  return ret;
}

function publish() {
  ghpages.publish('docs/html', {
    // silent option prevents decrypted credentials leaking into CI logs. See:
    // https://github.com/tschaub/grunt-gh-pages#optionssilent
    silent: true,
    src: '**',
    user: {
      name: process.env.GH_USER,
      email: process.env.GH_EMAIL,
    },
    repo: `https://${process.env.GH_TOKEN}@github.com/mozilla/addons-linter.git`,
    message: `Publish rules (auto)${getDeployMessage()}`,
  });
}

// `CIRCLE_PR_NUMBER` is the number of the associated GitHub or Bitbucket pull
// request. Only available on forked PRs. `CIRCLE_PULL_REQUEST` is the URL of
// the associated pull request.
if (
  typeof process.env.CIRCLE_PR_NUMBER !== 'undefined' ||
  typeof process.env.CIRCLE_PULL_REQUEST !== 'undefined'
) {
  console.log('Skipping rules publication.');
} else {
  console.log('Pushing branch for docker build');
  publish();
}
